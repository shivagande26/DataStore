pipeline {
  agent any

  parameters {
    string(name: "App_Version", description: "provide application version")
  }

  environment {
    DOCKERHUB_CREDENTIALS=credentials("dockerhub")
  }

  stages {
    stage("checkout") {
      steps {
        checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/shivagande26/DataStore.git']])
      }
    }
    stage("build") {
      steps {
        sh """
          echo "-------- Building Application --------"
          ./mvnw package
          echo "-------- Build Complete --------"
        """
      }
    }
    stage("test") {
      steps {
        sh """ 
          echo "-------- Executing TeatCases --------"
          ./mvnw test
          echo "-------- Complete TestCase Execution --------"
        """
      }
    }
    stage("artefact-store") {
      steps {
        sh """
          echo "-------- Pushing Artifacts To S3 --------"
          aws s3 cp ./target/*.jar s3://jenkins-artefact-store/
          echo "-------- Pushing Artifacts To S3 Completed --------"
        """
      }
    }
    stage("docker-image-build") {
      steps {
        sh """
          echo "-------- Building Docker Image --------"
          docker build -t datastore:"${App_Version}" .
          echo "-------- Image Successfully Built --------"
        """
      }
    }
    stage("trivy-scan") {
      steps {
        sh """
          echo "-------- Scanning Docker Image --------"
          trivy image datastore:"${App_Version}"
          echo "-------- Scanning Docker Image Completed --------"
        """
      }
    }
    stage("docker-image-tagging") {
      steps{
        sh """
          echo "-------- Tagging Docker Image --------"
          docker tag datastore:"${App_Version}" 8072388539/datastore:"${App_Version}"
          echo "-------- Tagging Docker Image Completed."
        """
      }
    }
    stage("docker-login-push") {
      steps {
        sh """
          echo "-------- Logging To DockerHub --------"
          docker login -u $DOCKERHUB_CREDENTIALS_USR --password $DOCKERHUB_CREDENTIALS_PSW
          echo "-------- DockerHub Login Successful --------"

          echo "-------- Pushing Docker Image To DockerHub --------"
          docker push 8072388539/datastore:"${App_Version}"
          echo "-------- Docker Image Pushed Successfully --------"
        """
      }
    }
    stage("cleanup") {
      steps {
        sh """
           echo "-------- Cleaning Up Jenkins Machine --------"
           docker image prune -a -f
           echo "-------- Clean Up Successful --------"
        """
      }
    }
  }
}
